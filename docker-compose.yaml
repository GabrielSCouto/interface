
services:

  postgres:
    image: postgres:15-alpine
    container_name: meu-banco-postgres
    hostname: postgres
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - /usr/share/ollama/.ollama:/root/.ollama
    tty: true
    restart: unless-stopped

  open-webui:
    build:
      context: .
      args:
        OLLAMA_BASE_URL: '/ollama'
      dockerfile: Dockerfile
    image: ghcr.io/open-webui/open-webui:${WEBUI_DOCKER_TAG-main}
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
      - ./src:/app/src
      - ./static:/app/static
      - ./public:/app/public
      - ./backend:/app/backend
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    ports:
      - ${OPEN_WEBUI_PORT-8080}:8080
    environment:
      - 'OLLAMA_BASE_URL=http://ollama:11434'
      - 'WEBUI_SECRET_KEY='
      - 'NODE_OPTIONS=--max-old-space-size=8192'
    restart: unless-stopped

  pipelines:
      image: ghcr.io/open-webui/pipelines:main
      container_name: pipelines
      volumes:
        - pipelines:/app/pipelines
      restart: always
      depends_on:
        - postgres
        - ollama
      env_file:
      - .env
      environment:
        - PIPELINES_API_KEY=0p3n-w3bu!
        - DB_HOST=postgres
        - DB_PORT=5432
        - DB_NAME=${POSTGRES_DB}
        - DB_USER=${POSTGRES_USER}
        - DB_PASS=${POSTGRES_PASSWORD}


volumes:
  postgres_data: {} 
  ollama: {}
  open-webui: {}
  pipelines: {}
